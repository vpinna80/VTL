name: VTL Engine builds

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: true
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-18.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Setup R
      uses: r-lib/actions/setup-r@v1
      with:
        r-version: ${{ matrix.config.r }}
    
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Cache R packages
      if: runner.os != 'Windows'
      uses: actions/cache@v2
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
        restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-1-
    
    - name: Install dependencies
      run: |
        try(system("sudo R CMD javareconf"))
        remotes::install_cran("rJava", type = ifelse(tolower(Sys.info()[["sysname"]])=="linux","source","both"))
        remotes::install_deps(dependencies = TRUE)
        remotes::install_cran("rcmdcheck")
      shell: Rscript {0}
        
    - name: Install R packages
      run: echo 'install.packages(c("R6", "rjava", "RJSDMX", "roxygen2", "devtools", "shiny", "shinydashboard"), repos = "http://cran.us.r-project.org")' | R --vanilla -q
    
    - name: Build with Maven
      run: mvn -P with-r --file pom.xml -Dgpg.skip=true clean install
