                              test_result := "Hello, world!" = "Hello" || ", world!";
a:= "Hello";b:= ", world!";   test_result:= "Hello, world!" = a||b;
b:= ", world!";               test_result:= ", world!, world!" = b||b;
a:= "Hello";                  test_result:= "Hello, kitten!" = a||", kitten!";
a:= "Hello ";                 test_result:= "Hello" = trim(a);
b:= "    Hello";              test_result:= "Hello" = ltrim(b);
c:= " Hello  ";               test_result:= " Hello" = rtrim(c);
d:= " Hello, this is a test.       ";test_result:= "Hello, this is a test." = trim(d);
                              test_result:= "HELLO" = upper("Hello");
                              test_result:= "hello" = lower("HEllo"); 
a := "Hello";                 test_result:= "HELLO" = upper(a);
a := "Hello";                 test_result:= "hello" = lower(a);
                              test_result:= "efghijklmn" = substr("abcdefghijklmnopqrstuvwxyz", 5, 10);
a:= "Hello, this is a test."; test_result:= "lo, this is a test" = substr(a,4,18);
a:= "Hello, this is a test."; test_result:= "Hello, this is a tes" = substr(a,_,20);
a:= "Hello, this is a test."; test_result:= "is is a test." = substr(a,10);
a:= "Hello, this is a test."; test_result:= "e" = substr(a,2,1);
a:= "Hello, this is a test."; test_result:= "Hello, this is a test." = substr(a,1,50);
                              test_result:= "Hi world" = replace("Hello world", "Hello", "Hi");
                              test_result:= " world" = replace("Hello world", "Hello");
                              test_result:= "Hi my fiw friend" = replace ("Hello my fellow friend", "ello", "i");
a:= "Hello, this is a test."; test_result:= "Hello, that at a test." = replace(a, "is", "at");
a:= "Hello, this is a test."; test_result:= "Hello,thisisatest." = replace(a, " ");
                              test_result:= 3 =instr("abcde", "c");
                              test_result:= 10 = instr("abcdecfrxcwsd", "c", _ , 3) ;
                              test_result:= 0 = instr("abcdecfrxcwsd", "c", 5, 3); 
a:= "Hello, this is a test."; test_result:= 10 = instr(a, "is");
a:= "Hello, this is a test."; test_result:= 13 = instr(a, "is", 11);
a:= "Hello, this is a test."; test_result:= 13 = instr(a, "is", _, 2);
                              test_result:= 13 = length("Hello, World!");
a:= "Hello, World!  ";        test_result:= 15 = length(a);

                              test_result:= abs ( -5.02 ) = 5.02;
a:= 3.1415;		  			  test_result:= abs (a) = 3.1415;
a:= -0.1415;	  			  test_result:= abs (a) = 0.1415;
a:= 3.1415;b:= -0.1415;		  test_result:= abs (a*b) = 0.44452225;
                              test_result:= 30 - (15 - (6*1/2 - (4/2 - 1/2))) = 16.5;
a:= 30;b:= a/2;c:= b - 9;	  test_result:= a - (b - (c*0.5 - (4/2 - 0.5))) = 16.5;
                              test_result:= ceil ( 3.14159 ) = 4;
                              test_result:= floor( 1.95 ) = 1;
a:= -3.1415;				  test_result:= ceil (a) = -3;
a:= -0.1415;				  test_result:= floor (a) = -1;
                              test_result:= round(exp ( 1 ),9) = 2.718281828;
                              test_result:= isnull(ln (0));
a:= 5;						  test_result:= round(exp (a), 7) = 148.4131591;
a:= -10.1415;				  test_result:= isnull(ln (a)); 
a:= 5;						  test_result:= round(ln (a), 9) = 1.609437912;
                              test_result:= mod ( 5, 2 ) = 1; 
                              test_result:= mod ( 9, -5 ) = -1;
                              test_result:= mod (7,0) = 7;
a:= 5;b:= -2;				  test_result:= mod (a,b) = -1;
a:= 5;b:= -2;				  test_result:= mod(a + 3, -b) = 0;
                              test_result:= power (5.0, -1) = 0.2;
                              test_result:= log (1024, 2) = 10;
a:= 5.0;					  test_result:= power (-a, 0) = 1;
a:= 5.0;					  test_result:= power (-a,3) = -125;
a:= 5.0;					  test_result:= round(log (a,2) , 9) = 2.321928095;
                              test_result:= round ( 3.14159 , 2 ) = 3.14;
                              test_result:= round ( 3.14159, 0 ) = 3;
a:= 5312.009;				  test_result:= round (a, -2) = 5300;
a:= -2.5;					  test_result:= round( a, 0) = -3;
                              test_result:= sqrt (25) = 5;
a:= 5.0;					  test_result:= round(sqrt (a), 9) = 2.236067977;
                              test_result:= trunc ( 3.14159 , 2 ) = 3.14;
                              test_result:= trunc ( 3.14159, 0 ) = 3;
a:= 5399.009;				  test_result:= trunc (a, -2) = 5300;
a:= -2.5;					  test_result:= trunc( a, 0) = -2;
                              test_result:= between ( 3.14159 , 3, 4 ) = true;
a:= 5399.009;				  test_result:= between (a, -2, 100) = false;
                              test_result:= 5=5.0 = true;
                              test_result:= 1<=-1 = false;
a:= "Hi";			          test_result:= a="Hi";
a:= "Hi";b:= "Hello";	      test_result:= a<>b;
a:= 7;b:= "7";	              test_result:= (a=b) = false;
                              test_result:= "a" in { "c", "ab", "bb", "bc" } = false;
                              test_result:= "a" not_in { "c", "ab", "bb", "bc" } = true;
a:= 5;						  test_result:= (a not_in { "c", 5,"ab", "bb", "bc" }) = false;
a:= 5;						  test_result:= a in { 105, 5,"5", "bb", "bc" }; 
a := 1;						  test_result:= isnull(a) = false;
                              test_result:= match_characters("ABC1EFGHIJKL", "\b([A-Z]{2})((?![A-Z]{10}\b)[A-Z0-9]{10})\b") = true; 
a:= "ABCDEFGHIJKL";			  test_result:= match_characters(a, "\b([A-Z]{2})((?![A-Z]{10}\b)[A-Z0-9]{10})\b") = false; 
                              test_result:= true and (true or false); 
a:= true;b:= false;			  test_result:= (a and b) = false;
a:= true;b:= false;			  test_result:= a or b;
                              test_result:= (true xor true) = false; 
a:= true;b:= false;			  test_result:= a xor b;
a:= true;b:= false;			  test_result:= (a xor not b) = false;
a:=4;b:=3;c:=if (a=4) then b else a+3;  test_result:= c = 3;
a:=3;b:=-2;c:=if (a=4) then b else a+3;  test_result:= c = 6;
tmp := 1.23;                  test_result:= tmp = 1.23;
tmp1 := 1.23;tmp2 := 1.23;    test_result := tmp1 + tmp2 = 2.46;
tmp1 := 1.23;tmp2 := 1.23;    test_result := tmp1 - tmp2 = 0;
tmp1 := 1.23;tmp2 := 1.23;    test_result := tmp1 / tmp2 = 1;
tmp1 := 1.23;tmp2 := 1.23;    test_result := tmp1 * tmp2 = 1.5129;
t := true;f := false;         test_result := (t and t) = true;
t := true;f := false;         test_result := (t and f) = false;
t := true;f := false;         test_result := (f and f) = false;
t := true;f := false;         test_result := (t or t) = true;
t := true;f := false;         test_result := (t or f) = true;
t := true;f := false;         test_result := (f or f) = false;
t := true;f := false;         test_result := (t xor t) = false;
t := true;f := false;         test_result := (t xor f) = true;
t := true;f := false;         test_result := (f xor f) = false;
t := true;f := false;         test_result := (not t) = false;
t := true;f := false;         test_result := (not f) = true;
tmp := 1.23;                  test_result := tmp = 1.23;
tmp := 1.23;                  test_result := not(tmp <> 1.23);
tmp := 1.23;                  test_result := not(tmp > 1.23);
tmp := 1.23;                  test_result := tmp >=1.23;
tmp := 1.23;                  test_result := not(tmp < 1.23);
tmp := 1.23;                  test_result := tmp <= 1.23;
tmp := 1;                     test_result := if (tmp < 2) then true else false;
tmp := "test";                test_result := if (tmp = "test") then true else false;
define operator add (x number default 0, y number default 0) returns number is x+y end operator;              test_result := round(add(2.1,3.46), 2) = 5.56;
define operator greater(x number, y number) returns boolean is  x > y end operator;          test_result := greater(3.46,3.45);
