<?xml version="1.0"?>
<!--

    Copyright Â© 2020 Banca D'Italia

    Licensed under the EUPL, Version 1.2 (the "License");
    You may not use this work except in compliance with the
    License.
    You may obtain a copy of the License at:

    https://joinup.ec.europa.eu/sites/default/files/custom-page/attachment/2020-03/EUPL-1.2%20EN.txt

    Unless required by applicable law or agreed to in
    writing, software distributed under the License is
    distributed on an "AS IS" basis,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
    express or implied.

    See the License for the specific language governing
    permissions and limitations under the License.

-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://oss.bancaditalia.it/vtl" 
	xmlns="http://oss.bancaditalia.it/vtl" elementFormDefault="qualified" version="1.1">

	<xs:element name="parserconfig" type="parserconfig">
		<xs:unique name="tokenset_unique">
			<xs:selector xpath="./tokenset" />
			<xs:field xpath="@name" />
		</xs:unique>
	</xs:element>

	<xs:complexType name="parserconfig">
		<xs:sequence>
			<xs:element name="package" type="xs:string" minOccurs="1" />
			<xs:element name="lexerclass" type="xs:string" minOccurs="1" />
			<xs:element name="parserclass" type="xs:string" minOccurs="1" />
			<xs:element name="roletokens" type="roletokens" minOccurs="1" />
			<xs:element name="valuecontexts" type="valuecontexts" minOccurs="1" />
			<xs:element name="parametertypes" type="parametertypes" minOccurs="1" />
			<xs:element name="tokenset" type="tokenset" maxOccurs="unbounded" minOccurs="0" />
			<xs:element name="recursivecontexts" type="recursivecontexts" minOccurs="0" />
			<xs:element name="statementdef" type="statementdef" maxOccurs="unbounded" minOccurs="0" />
			<xs:element name="mapping" type="mapping" maxOccurs="unbounded" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="recursivecontexts">
		<xs:sequence>
			<xs:element name="context" type="context" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="roletokens">
		<xs:sequence>
			<xs:element name="component" type="xs:string" minOccurs="1" maxOccurs="1" />
			<xs:element name="identifier" type="xs:string" minOccurs="1" maxOccurs="1" />
			<xs:element name="measure" type="xs:string" minOccurs="1" maxOccurs="1" />
			<xs:element name="attribute" type="xs:string" minOccurs="1" maxOccurs="1" />
			<xs:element name="viralattribute" type="xs:string" minOccurs="1" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="valuecontexts">
		<xs:sequence>
			<xs:element name="integer" type="xs:string" minOccurs="1" maxOccurs="unbounded" />
			<xs:element name="boolean" type="xs:string" minOccurs="1" maxOccurs="unbounded" />
			<xs:element name="string" type="xs:string" minOccurs="1" maxOccurs="unbounded" />
			<xs:element name="number" type="xs:string" minOccurs="1" maxOccurs="unbounded" />
			<xs:element name="null" type="xs:string" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="parametertypes">
		<xs:sequence>
			<xs:element name="scalar" type="scalarparamtype" minOccurs="1" />
			<xs:element name="component" type="componentparamtype" minOccurs="1" />
			<xs:element name="dataset" type="datasetparamtype" minOccurs="1" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="paramtype">
		<xs:attribute name="from" type="xs:string" use="required" />
	</xs:complexType>
	
	<xs:complexType name="scalarparamtype">
		<xs:complexContent>
			<xs:extension base="paramtype">
				<xs:sequence>
					<xs:element name="typerule" type="aliasparam" maxOccurs="1" minOccurs="1" />
					<xs:element name="defaultrule" type="valueparam" maxOccurs="1" minOccurs="1" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="componentparamtype">
		<xs:complexContent>
			<xs:extension base="paramtype">
				<xs:sequence>
					<xs:element name="rolerule" type="roleparam" maxOccurs="1" minOccurs="1" />
					<xs:element name="scalarrule" type="typeparam" maxOccurs="1" minOccurs="1" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="datasetparamtype">
		<xs:complexContent>
			<xs:extension base="paramtype">
				<xs:sequence>
					<xs:element name="namerule" type="aliasparam" maxOccurs="1" minOccurs="1" />
					<xs:element name="quantifierrule" type="nonnullparam" maxOccurs="1" minOccurs="1" />
					<xs:element name="componentrule" type="typeparam" maxOccurs="1" minOccurs="1" />
				</xs:sequence>
				<xs:attribute name="listrule" type="xs:string" use="required" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="context">
		<xs:attribute name="name" type="xs:string" use="required" />
	</xs:complexType>

	<xs:complexType name="tokenset">
		<xs:sequence>
			<xs:element name="tokenmapping" type="tokenmapping" maxOccurs="unbounded" minOccurs="1" />
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required" />
		<xs:attribute name="class" type="xs:string" use="required" />
	</xs:complexType>

	<xs:group name="checks">
		<xs:choice>
			<xs:choice>
				<xs:element name="tokens" type="tokenscheck" maxOccurs="1" minOccurs="0" />
				<xs:element name="context" type="contextcheck" maxOccurs="1" minOccurs="0" />
			</xs:choice>
		</xs:choice>
	</xs:group>

	<xs:complexType name="statementdef">
		<xs:sequence>
			<xs:element name="from" type="xs:string" maxOccurs="unbounded" minOccurs="1" />
			<xs:group ref="checks" minOccurs="0" maxOccurs="1" />
			<xs:group ref="params" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="to" type="xs:string" use="required" />
	</xs:complexType>

	<xs:complexType name="mapping">
		<xs:sequence>
			<xs:element name="from" type="xs:string" maxOccurs="unbounded" minOccurs="1" />
			<xs:group ref="checks" minOccurs="0" maxOccurs="1" />
			<xs:group ref="params" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="to" type="xs:string" use="required" />
	</xs:complexType>

	<xs:complexType name="check">
		<xs:attribute name="name" type="xs:string" />
		<xs:attribute name="ordinal" type="xs:int" />
	</xs:complexType>
	
	<xs:complexType name="tokenscheck">
		<xs:complexContent>
			<xs:extension base="check">
				<xs:sequence>
					<xs:element name="value" type="xs:string" maxOccurs="unbounded" minOccurs="1" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="contextcheck">
		<xs:complexContent>
			<xs:extension base="check">
				<xs:attribute name="context" type="xs:string" use="required" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tokenmapping">
		<xs:attribute name="name" type="xs:string" use="required" />
		<xs:attribute name="value" type="xs:string" use="required" />
	</xs:complexType>

	<xs:complexType name="typemapping">
		<xs:attribute name="type" type="xs:string" use="required" />
		<xs:attribute name="class" type="xs:string" use="required" />
		<xs:attribute name="method" type="xs:string" />
	</xs:complexType>

	<xs:complexType name="param" abstract="true">
		<xs:attribute name="type" type="type" use="optional" />
	</xs:complexType>
	
	<xs:simpleType name="type">
		<xs:restriction base="xs:string">
			<xs:enumeration value="groupby" />
		</xs:restriction>
	</xs:simpleType>

	<xs:group name="params">
		<xs:choice>
			<xs:choice>
				<xs:element name="nullparam" type="nullparam" />
				<xs:element name="aliasparam" type="aliasparam" />
				<xs:element name="stringparam" type="stringparam" />
				<xs:element name="exprparam" type="exprparam" />
				<xs:element name="valueparam" type="valueparam" />
				<xs:element name="roleparam" type="roleparam" />
				<xs:element name="tokensetparam" type="tokensetparam" />
				<xs:element name="listparam" type="listparam" />
				<xs:element name="mapparam" type="mapparam" />
				<xs:element name="paramparam" type="paramparam" />
				<xs:element name="typeparam" type="typeparam" />
				<xs:element name="customparam" type="customparam" />
				<xs:element name="caseparam" type="caseparam" />
				<xs:element name="nestedparam" type="nestedparam" />
			</xs:choice>
		</xs:choice>
	</xs:group>

	<xs:complexType name="nullparam">
		<xs:complexContent>
			<xs:extension base="param" />
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="nonnullparam" abstract="true">
		<xs:complexContent>
			<xs:extension base="param">
				<xs:attribute name="name" type="xs:string" />
				<xs:attribute name="ordinal" type="xs:integer" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="typeparam">
		<xs:complexContent>
			<xs:extension base="nonnullparam" />
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="stringparam">
		<xs:complexContent>
			<xs:extension base="nonnullparam" />
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="paramparam">
		<xs:complexContent>
			<xs:extension base="nonnullparam">
				<xs:sequence>
					<xs:element name="paramname" type="aliasparam" minOccurs="1" />
					<xs:element name="paramtype" type="typeparam" minOccurs="1" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="aliasparam">
		<xs:complexContent>
			<xs:extension base="nonnullparam" />
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="exprparam">
		<xs:complexContent>
			<xs:extension base="nonnullparam" />
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="valueparam">
		<xs:complexContent>
			<xs:extension base="nonnullparam" />
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="roleparam">
		<xs:complexContent>
			<xs:extension base="nonnullparam" />
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tokensetparam">
		<xs:complexContent>
			<xs:extension base="nonnullparam">
				<xs:attribute name="tokenset" type="xs:string" use="required" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="mapparam">
		<xs:complexContent>
			<xs:extension base="nonnullparam">
				<xs:sequence>
					<xs:element name="key">
						<xs:complexType>
							<xs:group ref="params" />
						</xs:complexType>
					</xs:element>
					<xs:element name="value">
						<xs:complexType>
							<xs:group ref="params" />
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="listparam">
		<xs:complexContent>
			<xs:extension base="nonnullparam">
				<xs:group ref="params" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="customparam">
		<xs:complexContent>
			<xs:extension base="nonnullparam">
				<xs:group ref="params" minOccurs="1" maxOccurs="unbounded" />
				<xs:attribute name="class" type="xs:string" use="required" />
				<xs:attribute name="method" type="xs:string" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="caseparam">
		<xs:complexContent>
			<xs:extension base="nonnullparam">
				<xs:sequence>
					<xs:element name="case" type="case" minOccurs="2" maxOccurs="unbounded" />
				</xs:sequence>
				<xs:attribute name="class" type="xs:string" use="required" />
				<xs:attribute name="method" type="xs:string" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="case">
		<xs:sequence>
			<xs:group ref="checks" minOccurs="1" maxOccurs="1" />
			<xs:group ref="params" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="nestedparam">
		<xs:complexContent>
			<xs:extension base="nonnullparam">
				<xs:group ref="params" minOccurs="1" maxOccurs="unbounded" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
</xs:schema>